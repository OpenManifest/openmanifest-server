name: Lint & Test
on: [push]
env:
  BUNDLE_JOBS: "3"
  BUNDLE_RETRY: "3"
  PGHOST: 127.0.0.1
  PGUSER: github
  PGPASSWORD: github
  RAILS_ENV: test
  RUBY_VERSION: 2.7.6
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout source code
      - uses: ruby/setup-ruby@v1
        name: Set up Ruby
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Rubocop
        run: bundle exec rubocop
  rspec-test:
    name: RSpec
    needs: rubocop-test
    runs-on: ubuntu-latest
    strategy:
      # Fail everything if one test fails
      fail-fast: true
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [4]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3]
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
          POSTGRES_DB: openmanifest_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Setup Python for JUnit Parsing
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - uses: actions/checkout@v3
        name: Checkout source code
      - name: Make bin/ci executable
        run: chmod +x ./bin/parallell-rspec
      - uses: ruby/setup-ruby@v1
        name: Set up Ruby
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Set up bundler
        run: gem install bundler
      - name: Restore gem cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Create database
        run: |
          bundler exec rails db:create RAILS_ENV=test
          bundler exec rails db:migrate RAILS_ENV=test
      - name: rspec parallell
        id: rspec-test
        env:
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          RSPEC_OUTPUT: tmp/rspec-${{ matrix.ci_node_index }}.xml
        continue-on-error: true
        run: |
          ./bin/parallell-rspec
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: tmp/*.xml
